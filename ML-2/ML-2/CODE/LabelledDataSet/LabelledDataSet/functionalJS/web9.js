ISQ.Protocol={};ISQ.Protocol.connectionStateEnum={DISCONNECTED:-1,CONNECTED:-2,CONNECTING:-3,RECONNECTING:-4,LOGIN_FAILD:-5,CONNECTION_LOST:-6,PRE_CONNECTED:-7};ISQ.Protocol.tokenEnum={LOGIN:-1,OPENCONNECTION:-2,SYSTEM:-3,LOGOUT:-5,CHANGEPASSWORD:-4,DIE:-6};ISQ.Protocol.requestId=new Date().getTime()%100000;ISQ.Protocol.QueueObejct=ISQ.Base.extend({name:"ISQ.Protocol.QueueObject"});ISQ.Protocol.QueueObejct.indexCounter=-1;ISQ.Protocol.QueueObejct.prototype.ctor=function(a,c,b){this.mData=a;this.mToken=c;this.mTimeout=b;this.mIndex=ISQ.Protocol.QueueObejct.indexCounter--};ISQ.Protocol.QueueObejct.prototype.dtor=function(){delete this.mData;delete this.mToken;delete this.mTimeout};ISQ.Protocol.QueueObejct.prototype.mCancelTokenDispose=false;ISQ.Protocol.QueueObejct.prototype.mData="";ISQ.Protocol.QueueObejct.prototype.mToken="";ISQ.Protocol.QueueObejct.prototype.mTimeout=0;ISQ.Protocol.QueueObejct.prototype.mIndex=-1;ISQ.Protocol.mSessionIdCookie="sessionid";ISQ.Protocol.mInitCodeCookie="initcode";ISQ.Protocol.ClientBase=ISQ.Base.extend({abstractClass:true,name:"ISQ.Protocol.ClientBase"});ISQ.Protocol.ClientBase.abstractClass.onConnectionStateChanged;ISQ.Protocol.ClientBase.abstractClass.onLogin;ISQ.Protocol.ClientBase.abstractClass.createLoginRequest;ISQ.Protocol.ClientBase.abstractClass.onResponseReceived;ISQ.Protocol.ClientBase.abstractClass.onDataRequestFail;ISQ.Protocol.ClientBase.abstractClass.onIncomingData;ISQ.Protocol.ClientBase.prototype.ctor=function(a){if(typeof(a)!=="object"){throw ("Protocol abstract ctor: arguments length invalid")}this.mServer=a.server||"";this.mTtl=a.ttl||this.mTtl;this.mCconnections=a.connections;if(this.mTtl<=0||typeof(this.mTtl)!=="number"){throw ("ISQ.Protocol: Ttl is illegal")}this.mAjax=new Ajax.Pool(this.mServer,this.mCconnections,Ajax.methodEnum.POST,Ajax.typeEnum.ASYNC,this.mTtl);var b=new Ajax.Headers();b.add("Content-Type","text/xml");this.mAjax.setDefaultHeaders(b);this.connectionStateChangeEvent=new ISQ.Event();this.mRestoreSessionById=a.restoreSessionById===true;this.mSaveSessionId=a.saveSessionId===true;
this.mKeepLoggedIn=a.keepLoggedIn===true;this.mAjax.incomingResponseEvent.addHandler(this.responseHandler,this);this.mEnableStats=true;this.mKeepAlive=false;this.mInitCode=ISQ.Http.urlArguments.ic;if(this.mInitCode==null){this.mInitCode=ISQ.Http.Cookies._read(ISQ.Protocol.mInitCodeCookie)}if(this.mInitCode==null){this.mInitCode=""}this.mSaveInitCode=a.saveInitCode!==false;this.mServerLog=new ISQ.Protocol.ServerLog(this);this.mSessionId="0";if(a.sessionId){this.mSessionId=a.sessionId}return this};ISQ.Protocol.ClientBase.prototype.dtor=function(){if(this.mDisposed){return}this.mDisposed=true;this.mAjax.dispose();this.mServerLog.dispose();delete this.mLog};ISQ.Protocol.ClientBase.prototype.prepareToDie=function(a){this.stopOpenConnection();if(this.mKeepAliveToken!==null){this.mKeepAliveToken.dispose()}delete this.mKeepAliveToken;if(this.mQueue!==null){this.mQueue.dispose()}this.connectionStateChangeEvent.dispose();if(this.mReconnectEvent){this.mReconnectEvent.dispose()}this.mAjax.isPrepareToDie=true;this.mAjax.clear();if(a){this.sendCloseSessionRequest()}};ISQ.Protocol.ClientBase.prototype.sendCloseSessionRequest=function(){if(this.mSessionId!=0){this.sendWrappedData({data:this.wrapDataRequest("<die/>"),priority:true,token:new Ajax.Token({id:ISQ.Protocol.tokenEnum.DIE})})}};ISQ.Protocol.ClientBase.prototype.saveSessionCookies=function(b){var c=this.mInitCode;this.mInitCode=b||"0";var a=null;if(this.keepLoggedIn()){a=60*60*24*14}if(this.mSaveInitCode&&(c!==this.mInitCode||a)){ISQ.Http.Cookies._write(ISQ.Protocol.mInitCodeCookie,this.mInitCode,"/console",ISQ.Http.domain(),true,a)}if(this.saveSessionId()){ISQ.Http.Cookies._write(ISQ.Protocol.mSessionIdCookie,this.mSessionId,"/",ISQ.Http.domain(),true)}};ISQ.Protocol.ClientBase.prototype.setServerUrl=function(a){this.mAjax.setDefaultUrl(a)};ISQ.Protocol.ClientBase.prototype.mLog=null;ISQ.Protocol.ClientBase.prototype.addToLog=function(a){if(debugLevel>2){return}if(this.mLog===null){this.mLog=[]}this.mLog.push(a)};ISQ.Protocol.ClientBase.prototype.reconnectEvent=function(a){if(!this.mReconnectEvent&&!a){this.mReconnectEvent=new ISQ.Event()
}return this.mReconnectEvent};ISQ.Protocol.ClientBase.prototype.changePasswordResponseEvent=function(a){if(!this.mChangePasswordResponseEvent&&!a){this.mChangePasswordResponseEvent=new ISQ.Event()}return this.mChangePasswordResponseEvent};ISQ.Protocol.ClientBase.prototype.keepLoggedIn=function(){if(arguments.length===0){return this.mKeepLoggedIn}this.mKeepLoggedIn=arguments[0]===true};ISQ.Protocol.ClientBase.prototype.initCode=function(){return this.mInitCode};ISQ.Protocol.ClientBase.prototype.keepAlive=function(){return this.mKeepAlive};ISQ.Protocol.ClientBase.prototype.account=function(){if(arguments.length===0){return this.mAccount}this.mAccount=arguments[0].toString()};ISQ.Protocol.ClientBase.prototype.saveSessionId=function(){if(arguments.length===0){return this.mSaveSessionId}this.mSaveSessionId=arguments[0]===true};ISQ.Protocol.ClientBase.prototype.username=function(){if(arguments.length===0){return this.mUsername}this.mUsername=arguments[0]};ISQ.Protocol.ClientBase.prototype.password=function(){if(arguments.length===0){return this.mPassword}this.mPassword=arguments[0]};ISQ.Protocol.ClientBase.prototype.email=function(){if(arguments.length===0){return this.mEmail}var a=arguments[0].toString().Trim();if(!ISQ.Data.checkString(a,"email")){return false}this.mEmail=a};ISQ.Protocol.ClientBase.prototype.fullUsername=function(){if(arguments.length===0){return this.mUsername+"@"+this.mAccount}var b=arguments[0].toString().Trim();if(!ISQ.Data.checkString(b,"username")){return false}var a=b.split("@");this.mUsername=a[0];this.mAccount=a[1]};ISQ.Protocol.ClientBase.prototype.reconnectionTimeLeft=function(){return this.mReconnectTimeLeft};ISQ.Protocol.ClientBase.prototype.connected=function(){return this.mState===ISQ.Protocol.connectionStateEnum.CONNECTED};ISQ.Protocol.ClientBase.prototype.id=function(a){return this.mSessionId};ISQ.Protocol.ClientBase.prototype.connectionStateChanged=function(b,a){if(this.mDisposed){return}this.addToLog("connection state changed: "+b);this.mState=b;if(this.keepAlive()&&this.mState!==ISQ.Protocol.connectionStateEnum.CONNECTED){this.stopOpenConnection()
}this.onConnectionStateChanged(b,a);this.connectionStateChangeEvent.dispatch(this.mState,a)};ISQ.Protocol.ClientBase.prototype.loginCompleted=function(){if(this.mDisposed){return}if(this.wrapDataRequestBuffer){this.sendCloseSessionRequest()}delete this.wrapDataRequestBuffer;this.wrapDataRequestBuffer=null;this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.PRE_CONNECTED,null);this.mSessionId=arguments[0];if(this.mSessionId==""||this.mSessionId==="0"){return}this.saveSessionCookies(arguments[1]);var a=[];for(var c=2;c<arguments.length;++c){a[c-2]=arguments[c]}var b=this.onLogin.apply(this,a);this.mAjax.stop();if(this.mQueue!==null&&this.mQueue.count()>0){while(this.mQueue.count()>0){var d=this.mQueue.dequeue();if(d.mToken&&d.mCancelTokenDispose){d.mToken.disposable=true}this.mAjax.add({data:this.wrapDataRequest(d.mData),token:d.mToken,timeout:d.mTimeout});d.dispose()}this.mQueue.dispose()}this.mAjax.go();if(this.keepAlive()){this.initOpenConnection()}this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.CONNECTED,b)};ISQ.Protocol.ClientBase.prototype.changePassword=function(b){var a=[];a.push("<?xml version='1.0' encoding='UTF-8' ?><nR>");a.push("<ChangePassword username='");a.push(this.fullUsername());a.push("' email='");a.push(this.mEmail);a.push("'>");a.push("<oldPassword><![CDATA[");a.push(this.mPassword);a.push("]]></oldPassword><newPassword><![CDATA[");a.push(b);a.push("]]></newPassword></ChangePassword>");a.push("</nR>");var d=new Ajax.Token({id:ISQ.Protocol.tokenEnum.CHANGEPASSWORD});d.tag=b;var c=a.join("");this.mAjax.add({data:c,token:d})};ISQ.Protocol.ClientBase.prototype.sendData=function(){var a;if(arguments.length===1&&typeof(arguments[0])==="object"){a=arguments[0]}else{a={data:arguments[0],token:arguments[1],timeout:arguments[2],priority:arguments[3]}}if(this.mState===ISQ.Protocol.connectionStateEnum.LOGIN_FAILD||this.mState==ISQ.Protocol.connectionStateEnum.CONNECTION_LOST){return -1}if(this.mState!==ISQ.Protocol.connectionStateEnum.CONNECTED){var b=this.enqueueData_internal(a);if(this.mState===ISQ.Protocol.connectionStateEnum.DISCONNECTED){this.login()
}return b}else{a.data=this.wrapDataRequest(a.data);return this.sendWrappedData(a)}};ISQ.Protocol.ClientBase.prototype.enqueueData_internal=function(a){var b=new ISQ.Protocol.QueueObejct(a.data,a.token,a.timeout);if(this.mQueue===null){this.mQueue=new ISQ.Infra.Queue()}if(b.mToken&&b.mToken.disposable){b.mCancelTokenDispose=true;b.mToken.disposable=false}this.mQueue.enqueue(b);return b.mIndex};ISQ.Protocol.ClientBase.prototype.sendWrappedData=function(a){return this.mAjax.add(a)};ISQ.Protocol.ClientBase.prototype.cancelRequest=function(b){if(b<0){if(this.mQueue===null){return}var c=-1;for(var a=0;a<this.mQueue.length&&c===-1;++a){if(this.mQueue[a].mIndex===b){c=a}}if(c!==-1){var d=this.mQueue[c];if(d.mToken.disposable){d.mToken.dispose()}d.dispose();this.mQueue.splice(c,1)}}else{this.mAjax.cancelRequest(b)}};ISQ.Protocol.ClientBase.prototype.stripToDataAndSend=function(b){var c=b.data.indexOf("<Session");c=b.data.indexOf(">",c);var a=b.data.indexOf("</nR>");b.data=b.data.substring(c+1,a);this.sendData(b)};ISQ.Protocol.ClientBase.prototype.login=function(a){if(this.mDisposed){return}if(this.mRestoreSessionById){var b=ISQ.Http.Cookies._read(ISQ.Protocol.mSessionIdCookie);if(b!==null){this.loginCompleted.apply(this,[b,this.mInitCode]);ISQ.Http.Cookies._delete(ISQ.Protocol.mSessionIdCookie,"/",ISQ.Http.domain(),true);return}}this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.CONNECTING);var c=new Ajax.Token({id:ISQ.Protocol.tokenEnum.LOGIN});this.mAjax.add({data:a||this.createLoginRequest(),token:c,priority:true})};ISQ.Protocol.ClientBase.prototype.loginWithTimeout=function(a){var b=this;setTimeout(function(){b.login(a.data)},this.loginRetryInterval)};ISQ.Protocol.ClientBase.prototype.loginRetriesReached=function(a){if(a.type===Ajax.responseTypeEnum.TIMEOUT){if(this.mReconnectTimer===null){this.mServerLog.shutdown();this.mReconnectTimeForRetry=0}this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.CONNECTION_LOST,a.status);if(this.mReconnectTimeForRetry<120){this.mReconnectTimeForRetry+=10}this.reconnect(a)
}else{if(a.type===Ajax.responseTypeEnum.UNAVAILABLE){if(this.mReconnectTimer===null){this.mServerLog.shutdown();this.mReconnectTimeForRetry=0}var b="";if(ISQ.Console.Login){b=uiLoc()["backupMode_loginPage"]}else{b=uiLoc()["backupMode_duringSession"]}this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.CONNECTION_LOST,b);if(this.mReconnectTimeForRetry<600){this.mReconnectTimeForRetry+=30}this.reconnect(a)}else{this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,a.status)}}};ISQ.Protocol.ClientBase.prototype.wrapDataRequest=function(a){if(this.wrapDataRequestBuffer===null){this.wrapDataRequestBuffer=[];this.wrapDataRequestBuffer.push("<?xml version='1.0' encoding='UTF-8' ?><nR>");this.wrapDataRequestBuffer.push("<Session id='");this.wrapDataRequestBuffer.push(this.mSessionId);this.wrapDataRequestBuffer.push("' requestId='");this.wrapDataRequestBuffer.push(++ISQ.Protocol.requestId);this.wrapDataRequestBuffer.push("' />");this.wrapDataRequestBuffer.push(a);this.wrapDataRequestBuffer.push("</nR>")}else{this.wrapDataRequestBuffer[4]=++ISQ.Protocol.requestId;this.wrapDataRequestBuffer[6]=a}return this.wrapDataRequestBuffer.join("")};ISQ.Protocol.ClientBase.prototype.responseHandler=function(h){if(this.mDisposed){return}var j=h.token!==null?h.token.id:100;try{var f,a;if(j===ISQ.Protocol.tokenEnum.LOGIN){var g=++this.mLoginRetries>=this.mLoginRetriesMax;switch(h.type){case Ajax.responseTypeEnum.UNAVAILABLE:if(!g){this.mLoginRetries=0;if(h.xml===null){this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,"Login failed");return}f=h.xml.getElementsByTagName("LoginResponse");if(f.length===0){this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,"Login failed");return}f=f[0];a="";if(f.childNodes.length>0){a=f.firstChild.nodeValue}this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,a);return}else{this.loginRetriesReached(h);return}break;
case Ajax.responseTypeEnum.OK:this.addToLog("login:200");if(h.xml===null){this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,"Login failed");return}f=h.xml.getElementsByTagName("LoginResponse");if(f===null||f.length===0){if(++this.mLoginRetries<this.mLoginRetriesMax){this.loginWithTimeout(h.request)}else{this.loginRetriesReached(h)}return}f=f[0];var l=f.getAttribute("sessionId")||"0";var m=0;try{m=parseInt(f.getAttribute("timeout"))||0}catch(b){}try{var c=f.getAttribute("errorCode")||"0";if(c==ISQ.Protocol.tokenEnum.CHANGEPASSWORD){window.location.href="https://"+ISQ.Http.domain(true)+"/console/changePw.html?username="+this.fullUsername()+"&email="+f.firstChild.nodeValue;return}}catch(b){}var d=f.getAttribute("initCode")||"0";a="";if(f.childNodes.length>0){a=f.firstChild.nodeValue}if(l==="0"){this.mServerLog.shutdown();this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.LOGIN_FAILD,a);return}this.mLoginRetries=0;this.mKeepAliveRetries=0;this.loginCompleted(l,d,a,m);break;case Ajax.responseTypeEnum.TIMEOUT:case Ajax.responseTypeEnum.FAIL:this.addToLog("login:fail/timeout");if((h.type===Ajax.responseTypeEnum.TIMEOUT||h.status==400)&&(!g||(h.corrupted&&this.mLoginRetries<this.mLoginRetriesMax_corrupted))){this.loginWithTimeout(h.request)}else{if(h.status==403){this.loginRetriesReached(h)}else{h.type=Ajax.responseTypeEnum.TIMEOUT;this.loginRetriesReached(h)}return}break}}else{if(j===ISQ.Protocol.tokenEnum.DIE){return}else{if(j===ISQ.Protocol.tokenEnum.CHANGEPASSWORD){if(h.type===Ajax.responseTypeEnum.OK){var i=h.xml.getElementsByTagName("ChangePasswordResponse");if(i!==null&&i.length>0){i=i[0];var k=i.getAttribute("result");if(k==="0"){this.mPassword=h.token.tag}}}if(this.mChangePasswordResponseEvent){this.mChangePasswordResponseEvent.dispatch(h)}}else{if(j===ISQ.Protocol.tokenEnum.SYSTEM){switch(h.type){case Ajax.responseTypeEnum.FAIL:case Ajax.responseTypeEnum.UNAVAILABLE:this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.RECONNECTING,h.status);this.stripToDataAndSend({priority:true,data:h.request.data,timeout:h.request.timeout,token:h.token});
this.login();break}}else{if(j===ISQ.Protocol.tokenEnum.OPENCONNECTION){this.mWaitingForKeepAliveResponse=false;switch(h.type){case Ajax.responseTypeEnum.OK:this.addToLog("open connection:200");this.mKeepAliveRetries=0;if(h.text.length!==0){this.onIncomingData(h)}this.restartOpenConnection(this.mOpenConnectionInterval);break;case Ajax.responseTypeEnum.TIMEOUT:case Ajax.responseTypeEnum.FAIL:case Ajax.responseTypeEnum.UNAVAILABLE:this.addToLog("open connection:fail/timeout");if((h.status!==403||h.type===Ajax.responseTypeEnum.TIMEOUT)&&++this.mKeepAliveRetries<this.mKeepAliveRetriesMax){this.doOpenConnection(this.mOpenConnectionRetryTTL)}else{this.mKeepAliveRetries=0;this.login();return}break}}else{if(j===ISQ.Protocol.tokenEnum.LOGOUT){if(h.token.tag===""){window.location.href="/console/login.html"}else{window.location.href=h.token.tag}}else{switch(h.type){case Ajax.responseTypeEnum.OK:this.addToLog("data:200, token: "+h.token);this.onIncomingData(h);break;case Ajax.responseTypeEnum.TIMEOUT:this.addToLog("data:timeout, token:"+h.token);this.onDataRequestFail(h);break;case Ajax.responseTypeEnum.FAIL:case Ajax.responseTypeEnum.UNAVAILABLE:this.addToLog("data:fail, token:"+h.token);this.onDataRequestFail(h);break}}}}}}}this.onResponseReceived(h)}catch(b){if(debugLevel>1){throw (b)}}};ISQ.Protocol.ClientBase.prototype.initOpenConnection=function(){if(!this.mKeepAliveToken){this.mKeepAliveToken=new Ajax.Token({id:ISQ.Protocol.tokenEnum.OPENCONNECTION,disposable:false})}this.buildOpenConnectionString();this.restartOpenConnection(this.mOpenConnectionInterval)};ISQ.Protocol.ClientBase.prototype.sendUpdateRequest=function(){this.doOpenConnection()};ISQ.Protocol.ClientBase.prototype.state=function(){return this.mState};ISQ.Protocol.ClientBase.prototype.doOpenConnection=function(a){a=a||this.mTtl;if(this.mState!==ISQ.Protocol.connectionStateEnum.CONNECTED){return}if(this.mWaitingForKeepAliveResponse){return}this.mWaitingForKeepAliveResponse=true;this.stopOpenConnection();if(this.isDisposed()){return}this.mAjax.add({data:this.wrapDataRequest(this.mOpenConnectionString),token:this.mKeepAliveToken,timeout:a,priority:true})
};ISQ.Protocol.ClientBase.prototype.changeOpenConnectionInterval=function(a){this.mOpenConnectionInterval=a};ISQ.Protocol.ClientBase.prototype.restartOpenConnection=function(b){var a=this;this.mOpenConnectionTimeout=setTimeout(function(){a.doOpenConnection()},b)};ISQ.Protocol.ClientBase.prototype.stopOpenConnection=function(){clearTimeout(this.mOpenConnectionTimeout)};ISQ.Protocol.ClientBase.prototype.buildOpenConnectionString=function(){var a=[];a.push("<oC ");if(this.mOpenConnectionHash){for(var b in this.mOpenConnectionHash){a.push(b);a.push("='");a.push(this.mOpenConnectionHash[b]);a.push("' ")}}a.push("/>");this.mOpenConnectionString=a.join("")};ISQ.Protocol.ClientBase.prototype.addOpenConnectionAttribute=function(b,c,a){if(!this.mOpenConnectionHash){this.mOpenConnectionHash=[]}this.mOpenConnectionHash[b]=c;if(!a){this.buildOpenConnectionString()}};ISQ.Protocol.ClientBase.prototype.replaceOpenConnectionAttribute=function(a,b){this.removeOpenConnectionAttribute(a,true);this.addOpenConnectionAttribute(a,b,true);this.buildOpenConnectionString()};ISQ.Protocol.ClientBase.prototype.removeOpenConnectionAttribute=function(b,a){if(!this.mOpenConnectionHash){return}if(!this.mOpenConnectionHash[b]){return}delete this.mOpenConnectionHash[b];if(!a){this.buildOpenConnectionString()}};ISQ.Protocol.ClientBase.prototype.logout=function(a){ISQ.Protocol.ClientBase.prototype.stopOpenConnection();this.deleteInitCode();if(this.mState===ISQ.Protocol.connectionStateEnum.CONNECTED){a=a||null;var b=new Ajax.Token({id:ISQ.Protocol.tokenEnum.LOGOUT});if(a!==null&&typeof(a)==="string"){b.tag=a}else{b.tag=""}this.sendWrappedData({data:this.wrapDataRequest("<logout />"),token:b,priority:true})}};ISQ.Protocol.ClientBase.prototype.deleteInitCode=function(){ISQ.Http.Cookies._delete(ISQ.Protocol.mInitCodeCookie,"/console",ISQ.Http.domain(),true)};ISQ.Protocol.ClientBase.prototype.reconnect=function(a){this.mReconnectTimeLeft=this.mReconnectTimeForRetry;if(this.reconnectEvent(true)){this.reconnectEvent().dispatch(this.mReconnectTimeLeft,a)}this.doReconnect()
};ISQ.Protocol.ClientBase.prototype.doReconnect=function(){var a=this;this.mReconnectTimer=setTimeout(function(){a.reconnectTimerElapsed()},this.mReconnectInterval)};ISQ.Protocol.ClientBase.prototype.reconnectTimerElapsed=function(){--this.mReconnectTimeLeft;if(this.reconnectEvent(true)){this.reconnectEvent().dispatch(this.mReconnectTimeLeft)}if(this.mReconnectTimeLeft===0){this.connectionStateChanged(ISQ.Protocol.connectionStateEnum.RECONNECTING);this.login()}else{this.doReconnect()}};ISQ.Protocol.ClientBase.prototype.reconnectNow=function(){if(this.mState===ISQ.Protocol.connectionStateEnum.CONNECTED||this.mState==ISQ.Protocol.connectionStateEnum.CONNECTING||this.mState===ISQ.Protocol.connectionStateEnum.RECONNECTING){return}if(this.mReconnectTimer!==null){clearTimeout(this.mReconnectTimer)}this.login()};ISQ.Protocol.ClientBase.prototype.mServerLog=null;ISQ.Protocol.ClientBase.prototype.sendServerLog=function(a,b){this.mServerLog.send(a,b)};ISQ.Protocol.ClientBase.prototype.mServer="";ISQ.Protocol.ClientBase.prototype.mState=ISQ.Protocol.connectionStateEnum.DISCONNECTED;ISQ.Protocol.ClientBase.prototype.mAjax=null;ISQ.Protocol.ClientBase.prototype.mCconnections=0;ISQ.Protocol.ClientBase.prototype.mTtl=10000;ISQ.Protocol.ClientBase.prototype.mInitCode="";ISQ.Protocol.ClientBase.prototype.mSaveInitCode=true;ISQ.Protocol.ClientBase.prototype.mSessionId="0";ISQ.Protocol.ClientBase.prototype.mLoginRetries=0;ISQ.Protocol.ClientBase.prototype.mLoginRetriesMax=1;ISQ.Protocol.ClientBase.prototype.mLoginRetriesMax_corrupted=5;ISQ.Protocol.ClientBase.prototype.mKeepAliveRetries=0;ISQ.Protocol.ClientBase.prototype.mKeepAliveRetriesMax=2;ISQ.Protocol.ClientBase.prototype.mWaitingForKeepAliveResponse=false;ISQ.Protocol.ClientBase.prototype.mUsername="";ISQ.Protocol.ClientBase.prototype.mPassword="";ISQ.Protocol.ClientBase.prototype.mAccount="";ISQ.Protocol.ClientBase.prototype.mQueue=null;ISQ.Protocol.ClientBase.prototype.mEnableStats=true;ISQ.Protocol.ClientBase.prototype.wrapDataRequestBuffer=null;ISQ.Protocol.ClientBase.prototype.loginRetryInterval=3500;
ISQ.Protocol.ClientBase.prototype.mKeepAlive=false;ISQ.Protocol.ClientBase.prototype.mOpenConnectionInterval=2500;ISQ.Protocol.ClientBase.prototype.mOpenConnectionRetryTTL=3000;ISQ.Protocol.ClientBase.prototype.mOpenConnectionTimeout=null;ISQ.Protocol.ClientBase.prototype.mOpenConnectionString="";ISQ.Protocol.ClientBase.prototype.mOpenConnectionHash=null;ISQ.Protocol.ClientBase.prototype.mKeepLoggedIn=false;ISQ.Protocol.ClientBase.prototype.mSaveSessionId=false;ISQ.Protocol.ClientBase.prototype.mRestoreSessionById=false;ISQ.Protocol.ClientBase.prototype.mDisposed=false;ISQ.Protocol.ClientBase.prototype.mEmail="";ISQ.Protocol.ClientBase.prototype.mReconnectTimer=null;ISQ.Protocol.ClientBase.prototype.mReconnectTimeForRetry=10;ISQ.Protocol.ClientBase.prototype.mReconnectTimeLeft=0;ISQ.Protocol.ClientBase.prototype.mReconnectInterval=1000;ISQ.Protocol.ClientBase.prototype.mKeepAliveToken=null;ISQ.Protocol.ClientBase.prototype.connectionStateChangeEvent=null;ISQ.Protocol.ClientBase.prototype.mReconnectEvent=null;ISQ.Protocol.ClientBase.prototype.mChangePasswordResponseEvent=null;