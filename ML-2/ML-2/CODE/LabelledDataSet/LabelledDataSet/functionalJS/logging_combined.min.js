var TraceKit = {};
TraceKit.report = function() {
    function a(a) {
        e.push(a)
    }
    function b(a) {
        for (var b = e.length - 1; b >= 0; --b)
            e[b] === a && e.splice(b, 1)
    }
    function c(a, b) {
        var c = null;
        for (var d in e)
            if (e.hasOwnProperty(d))
                try {
                    e[d](a, b)
        } catch (f) {
            c = f
        }
        if (c)
            throw c
    }
    function d(a) {
        if (g) {
            if (f === a)
                return;
            var b = g;
            g = null, f = null, c(b, a)
        }
        var d = TraceKit.computeStackTrace(a);
        throw g = d, f = a, window.setTimeout(function() {
            f === a && (g = null, f = null, c(d, a))
        }, d.incomplete ? 2e3 : 0), a
    }
    var e = [], f = null, g = null, h = window.onerror;
    return window.onerror = function(a, b, d, e, i) {
        var j = null, k = null;
        if (i && (j = TraceKit.computeStackTrace(i)), !j)
            if (g)
                TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(g, b, d, e, a), j = g, k = f, g = null, f = null;
            else {
                var l = {
                    url: b,
                    line: d,
                    column: e
                };
                l.func = TraceKit.computeStackTrace.guessFunctionName(l.url, l.line), l.context = TraceKit.computeStackTrace.gatherContext(l.url, l.line), j = {
                    mode: "onerror",
                    message: a,
                    stack: [l]
                }
            }
        return c(j, k), h ? h.apply(this, arguments) : !1
    }, d.subscribe = a, d.unsubscribe = b, d
}(), TraceKit.computeStackTrace = function() {
    function a(a) {
        try {
            void 0 === XMLHttpRequest && (XMLHttpRequest = function() {
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP.6.0")
                } catch (a) {}
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP.3.0")
                } catch (a) {}
                try {
                    return new ActiveXObject("Msxml2.XMLHTTP")
                } catch (a) {}
                try {
                    return new ActiveXObject("Microsoft.XMLHTTP")
                } catch (a) {}
                throw new Error("No XHR.")
            });
            var b = new XMLHttpRequest;
            return b.open("GET", a, !1), b.send(""), b.responseText
        } catch (c) {
            return ""
        }
    }
    function b(b) {
        if (!r.hasOwnProperty(b)) {
            var c, d = b.split("/");
            c = d.length > 2 && d[2] === document.domain ? a(b) : [], r[b] = c.length ? c.split("\n") : []
        }
        return r[b]
    }
    function c(a, c) {
        var d, e = /function ([^(]*)\(([^)]*)\)/, f = /['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/, g = "", h = 10, i = b(a);
        if (!i.length)
            return "?";
        for (var j = 0; h > j; ++j)
            if (g = i[c - j] + g, void 0 !== g) {
                if (d = f.exec(g))
                    return d[1];
                    if (d = e.exec(g))
                        return d[1]
            }
        return "?"
    }
    function d(a, c) {
        var d = b(a), e = {}, f=!1;
        if (!d.length)
            return null;
        c -= 1;
        for (var g = c - 2, h = c + 5; h > g; ++g)
            e[g] = d[g], void 0 !== d[g] && (f=!0);
        return f ? e : null
    }
    function e(a) {
        return a.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g, "\\$&")
    }
    function f(a) {
        return e(a).replace("<", "(?:<|&lt;)").replace(">", "(?:>|&gt;)").replace("&", "(?:&|&amp;)").replace('"', '(?:"|&quot;)').replace(/\s+/g, "\\s+")
    }
    function g(a, c) {
        for (var d, e, f = 0, g = c.length; g > f; ++f)
            if ((d = b(c[f])).length && (d = d.join("\n"), e = a.exec(d)))
                return {
                    url: c[f],
                    line: d.substring(0, e.index).split("\n").length,
                    column: e.index - d.lastIndexOf("\n", e.index) - 1
                };
        return null
    }
    function h(a, c, d) {
        var f, g = b(c), h = new RegExp("\\b" + e(a) + "\\b");
        return d -= 1, g && g.length > d && (f = h.exec(g[d])) ? f.index : null
    }
    function i(a) {
        for (var b, c, d, h, i = [window.location.href], j = document.getElementsByTagName("script"), k = "" + a, l = /^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/, m = /^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/, n = 0; n < j.length; ++n) {
            var o = j[n];
            o.src && i.push(o.src)
        }
        if (d = l.exec(k)) {
            var p = d[1] ? "\\s+" + d[1]: "", q = d[2].split(",").join("\\s*,\\s*");
            b = e(d[3]).replace(/;$/, ";?").replace(/\s+/g, "\\s+"), c = new RegExp("function" + p + "\\s*\\(\\s*" + q + "\\s*\\)\\s*{\\s*" + b + "\\s*}")
        } else 
            c = new RegExp(e(k).replace(/\s+/g, "\\s+"));
        if (h = g(c, i))
            return h;
        if (d = m.exec(k)) {
            var r = d[1];
            if (b = f(d[2]), c = new RegExp("on" + r + "=[\\'\"]\\s*" + b + "\\s*[\\'\"]", "i"), h = g(c, i[0]))
                return h;
            if (c = new RegExp(b), h = g(c, i))
                return h
        }
        return null
    }
    function j(a) {
        if (!a.stack)
            return null;
        for (var b, e, f = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i, g = /^\s*(?:(\S*)(?:\((.*?)\))?@)?((?:file|http|https).*?):(\d+)(?::(\d+))?\s*$/i, i = a.stack.split("\n"), j = [], k = /^(.*) is undefined$/.exec(a.message), l = 0, m = i.length; m > l; ++l) {
            if (b = g.exec(i[l]))
                e = {
                    url: b[3],
                    func: b[1],
                    args: b[2] ? b[2].split(","): "",
                    line: + b[4],
                    column: b[5]?+b[5]: null
                };
            else {
                if (!(b = f.exec(i[l])))
                    continue;
                e = {
                    url: b[2],
                    func: b[1],
                    line: + b[3],
                    column: b[4]?+b[4]: null
                }
            }
            !e.func && e.line && (e.func = c(e.url, e.line)), e.line && (e.context = d(e.url, e.line)), j.push(e)
        }
        return j[0] && j[0].line&&!j[0].column && k && (j[0].column = h(k[1], j[0].url, j[0].line)), j.length ? {
            mode: "stack",
            name: a.name,
            message: a.message,
            stack: j
        } : null
    }
    function k(a) {
        for (var b, e = a.stacktrace, f = / line (\d+), column (\d+) in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\) in (.*):\s*$/i, g = e.split("\n"), h = [], i = 0, j = g.length; j > i; i += 2)
            if (b = f.exec(g[i])) {
                var k = {
                    line: + b[1],
                    column: + b[2],
                    func: b[3] || b[4],
                    args: b[5] ? b[5].split(","): [],
                    url: b[6]
                };
                if (!k.func && k.line && (k.func = c(k.url, k.line)), k.line)
                    try {
                        k.context = d(k.url, k.line)
                    } catch (l) {}
                    k.context || (k.context = [g[i + 1]]), h.push(k)
        }
        return h.length ? {
            mode: "stacktrace",
            name: a.name,
            message: a.message,
            stack: h
        } : null
    }
    function l(a) {
        var e = a.message.split("\n");
        if (e.length < 4)
            return null;
        var h, i, j, k, l = /^\s*Line (\d+) of linked script ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i, m = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i, n = /^\s*Line (\d+) of function script\s*$/i, o = [], p = document.getElementsByTagName("script"), q = [];
        for (i in p)
            p.hasOwnProperty(i)&&!p[i].src && q.push(p[i]);
        for (i = 2, j = e.length; j > i; i += 2) {
            var r = null;
            if (h = l.exec(e[i]))
                r = {
                    url: h[2],
                    func: h[3],
                    line: + h[1]
                };
            else if (h = m.exec(e[i])) {
                r = {
                    url: h[3],
                    func: h[4]
                };
                var s =+ h[1], t = q[h[2] - 1];
                if (t && (k = b(r.url))) {
                    k = k.join("\n");
                    var u = k.indexOf(t.innerText);
                    u >= 0 && (r.line = s + k.substring(0, u).split("\n").length)
                }
            } else if (h = n.exec(e[i])) {
                var v = window.location.href.replace(/#.*$/, ""), w = h[1], x = new RegExp(f(e[i + 1]));
                k = g(x, [v]), r = {
                    url: v,
                    line: k ? k.line: w,
                    func: ""
                }
            }
            if (r) {
                r.func || (r.func = c(r.url, r.line));
                var y = d(r.url, r.line), z = y ? y[Math.floor(y.length / 2)]: null;
                r.context = y && z.replace(/^\s*/, "") === e[i + 1].replace(/^\s*/, "") ? y : [e[i + 1]], o.push(r)
            }
        }
        return o.length ? {
            mode: "multiline",
            name: a.name,
            message: e[0],
            stack: o
        } : null
    }
    function m(a, b, e, f, g) {
        var i = {
            url: b,
            line: e,
            column: g
        };
        if (i.url && i.line) {
            a.incomplete=!1, i.func || (i.func = c(i.url, i.line)), i.context || (i.context = d(i.url, i.line));
            var j = / '([^']+)' /.exec(g);
            if (j && (i.column = h(j[1], i.url, i.line)), a.stack.length > 0 && a.stack[0].url === i.url) {
                if (a.stack[0].line === i.line)
                    return !1;
                if (!a.stack[0].line && a.stack[0].func === i.func)
                    return a.stack[0].line = i.line, a.stack[0].context = i.context, !1
            }
            return a.stack.unshift(i), a.partial=!0, !0
        }
        return a.incomplete=!0, !1
    }
    function n(a, b) {
        for (var d, e, f, g = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, j = [], k = {}, l=!1, n = arguments.callee.caller; n&&!l; n = n.caller)
            if (n !== o && n !== TraceKit.report) {
                if (e = {
                    url: null,
                    func: "?",
                    line: null,
                    column: null
                }, n.name ? e.func = n.name : (d = g.exec(n.toString())) && (e.func = d[1]), f = i(n)) {
                    e.url = f.url, e.line = f.line, "?" === e.func && (e.func = c(e.url, e.line));
                    var p = / '([^']+)' /.exec(a.message || a.description);
                    p && (e.column = h(p[1], f.url, f.line))
                }
                k["" + n] && (e.recursion=!0), j.push(e)
            }
        b && j.splice(0, b);
        var q = {
            mode: "callers",
            name: a.name,
            message: a.message,
            stack: j
        };
        return m(q, a.sourceURL || a.fileName, a.line || a.lineNumber, a.message || a.description), q
    }
    function o(a, b) {
        var c = null;
        b = void 0 === b ? 0 : + b;
        try {
            if (c = k(a))
                return c
            } catch (d) {
            if (q)
                throw d
        }
        try {
            if (c = j(a))
                return c
        } catch (d) {
            if (q)
                throw d
        }
        try {
            if (c = l(a))
                return c
        } catch (d) {
            if (q)
                throw d
        }
        try {
            if (c = n(a, b + 1))
                return c
        } catch (d) {
            if (q)
                throw d
        }
        return {
            mode: "failed"
        }
    }
    function p(a) {
        a = (void 0 === a ? 0 : + a) + 1;
        try {
            0()
        } catch (b) {
            return o(b, a + 1)
        }
        return null
    }
    var q=!1, r = {};
    return o.augmentStackTraceWithInitialElement = m, o.guessFunctionName = c, o.gatherContext = d, o.ofCaller = p, o
}(), TraceKit.wrap = function(a) {
    function b() {
        try {
            return a.apply(this, arguments)
        } catch (b) {
            throw TraceKit.report(b), b
        }
    }
    return b
}, function() {
    var a = function(a) {
        var b = window[a];
        window[a] = function() {
            var a = Array.prototype.slice.call(arguments, 0), c = a[0];
            return "function" == typeof c && (a[0] = TraceKit.wrap(c)), b.apply ? b.apply(this, a) : b.call ? b.call(this, a[0], a[1]) : b(a[0], a[1])
        }
    };
    a("setTimeout"), a("setInterval")
}(), function() {
    "use strict";
    TraceKit.remoteFetching=!1, TraceKit.collectWindowErrors=!0, TraceKit.linesOfContext = 7, TraceKit.report.subscribe(function(a) {
        if (a.message) {
            a.referer = document.referrer, a.url = document.location.href, a.useragent = navigator.userAgent;
            var b = new Image, c = "/log/js_error?log_data=" + encodeURIComponent(JSON.stringify(a));
            b.onload = function() {}, b.onerror = b.onabort = function() {}, b.src = c
        }
    }), window.logValidationError = function(a) {
        if (a && a instanceof Object) {
            var b = new Image, c = "/log/js_validation_error?log_data=" + encodeURIComponent(JSON.stringify(a));
            b.onload = function() {}, b.onerror = b.onabort = function() {}, b.src = c
        }
    }
}();

