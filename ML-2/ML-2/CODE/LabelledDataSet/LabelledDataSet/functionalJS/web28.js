function initializeNS(a){var b=a.split(".");var d=window;for(var c=0;c<b.length;++c){d=d[b[c]];if(typeof(d)==="undefined"||!d){return{}}}return d}function isNSexists(a){var b=a.split(".");var d=window;for(var c=0;c<b.length;++c){d=d[b[c]];if(typeof(d)==="undefined"||!d){return false}}return true}ISQ=initializeNS("ISQ");nanoRep=ISQ;ISQ.version="2.45.3.1";var debugLevel=0;ISQ.Base=function Class(){};ISQ.Base.polymorphismCtor=function(b,a){a=ISQ.Tools.toArray(a);if(this.mBase!==null&&typeof(this.mBase.prototype.polymorphismCtor)==="function"){this.initBase.apply(this,a);this.mBase.prototype.polymorphismCtor(b,a)}this.ctor.apply(b,a)};ISQ.Base.extend=function(d){var b=function(){if(typeof(d)==="object"&&d.abstractClass&&this instanceof b){throw ("Trying to create an instance of an abstract class")}if(this.mBase!==null&&typeof(this.mBase.abstractClass)==="object"){for(var e in this.mBase.abstractClass){if(typeof(this[e])!=="function"){throw ("un-implemented abstract method: "+e)}}}this.polymorphismCtor(this,arguments);if(debugLevel>2){profiler.registerObjectCreation(this)}};for(var c in this.prototype){b.prototype[c]=this.prototype[c]}if(typeof(d)==="object"&&d.abstractClass){b.abstractClass={}}b.prototype.polymorphismCtor=ISQ.Base.polymorphismCtor;b.extend=this.extend;b.prototype.mBase=this;if(typeof(d)!=="object"||typeof(d.name)!=="string"){throw ("Class name is missing (ctorObject.name)")}var a=d.name.Trim();if(!a){throw ("Invalid class name")}b.prototype.__className__=b.__className__=a;return b};ISQ.Base.__className__="Base Class";ISQ.Base.prototype.__className__="Base Class";ISQ.Base.prototype.mBase=null;ISQ.Base.prototype.mIsDisposed=false;ISQ.Base.prototype.ctor=function(){};ISQ.Base.prototype.dtor=function(){delete this.mBase};ISQ.Base.prototype.initBase=function(){};ISQ.Base.prototype.isDisposed=function(){return this.mIsDisposed};ISQ.Base.prototype.executeBaseMethod=function(b,a){if(!this.mBase){throw ("ISQ.Base.prototype.executeBaseMethod: no base!")}this.mBase.prototype[b].apply(this,a||[])};ISQ.Base.prototype.dispose=function(){if(this.mIsDisposed){return false
}this.mIsDisposed=true;var b=this.dtor.apply(this,arguments);if(b===false){this.mIsDisposed=false;return false}if(debugLevel>2){profiler.registerObjectDisposal(this)}var a=this.mBase;while(a!==null){a.prototype.dtor.apply(this,arguments);a=a.prototype.mBase}this.__dispose__();return true};ISQ.Base.prototype.__dispose__=function(){for(var b in this){try{switch(b){case"mBase":case"__dispose__":case"polymorphismCtor":case"extend":case"__className__":continue;break}if(typeof(this[b])==="undefined"||this[b]===null){continue}if(typeof(this[b])!=="function"&&typeof(this[b])!=="object"){continue}if(typeof(this[b].dispose)==="function"){this[b].dispose()}if(this[b] instanceof Array){for(var c in this[b]){if(this[b][c]&&typeof(this[b][c].dispose)==="function"){this[b][c].dispose()}}}delete this[b]}catch(a){if(debugLevel>1){alert("base::__dispose__: error disposing:"+b)}}}};ISQ.Base.prototype.isDerivedOf=function(a,c){c=c===true;if(c&&this.__className__===a.__className__){return false}if(this.__className__===a.__className__){return true}var d=false;var b=this.mBase;while(b!==null&&!d){if(a.__className__===b.__className__){d=true}b=b.prototype.mBase}return d};ISQ.Base.isDerivedOf=function(a,b){if(a===null){return false}if(typeof(a)!=="object"||typeof(a.isDerivedOf)!=="function"){return false}return a.isDerivedOf(b)};ISQ.Profiler=function(){this.mAllocationArray=new Array();this.mDisposalArray=new Array();this.mCurrentArray=new Array();this.mPointerArray=new Array()};ISQ.Profiler.prototype.dispose=function(){delete this.mAllocationArray;delete this.mDisposalArray;delete this.mCurrentArray;delete this.mPointerArray};ISQ.Profiler.prototype.registerObjectCreation=function(c){var a=c.__className__;var b=this.mAllocationArray[a];if(typeof(b)==="undefined"){b=0}this.mAllocationArray[a]=++b;var b=this.mCurrentArray[a];if(typeof(b)==="undefined"){b=0}this.mCurrentArray[a]=++b;var d=this.mPointerArray[a];if(!d){d=new Array();this.mPointerArray[a]=d}d.push(c)};ISQ.Profiler.prototype.registerObjectDisposal=function(d){if(this.inCleaningProcedure){return
}var a=d.__className__;var b=this.mDisposalArray[a];if(typeof(b)==="undefined"){b=0}this.mDisposalArray[a]=++b;b=this.mCurrentArray[a];this.mCurrentArray[a]=--b;var e=this.mPointerArray[a];if(e){for(var c=0;c<e.length;++c){if(e[c]===d){e.splice(c,1);break}}}};ISQ.Profiler.prototype.reset=function(){this.inCleaningProcedure=false;this.mAllocationArray=new Array();this.mDisposalArray=new Array();this.mCurrentArray=new Array();this.mPointerArray=new Array()};ISQ.Profiler.prototype.validatePointerArray=function(){var a=new Array();for(var c in this.mPointerArray){var b=this.mPointerArray[c];var d=this.mCurrentArray[c];if(d!==b.length){a[c]=true}}return a};ISQ.Profiler.prototype.analyzeHandlers=function(){var e=this.mPointerArray["ISQ.Handler"];var a=new Array();for(var d=0;d<e.length;++d){var c=e[d];var b=c.context;if(!ISQ.Base.isDerivedOf(b,ISQ.Base)){continue}if(b.isDisposed()){a.push({name:b.__className__,instance:b,func:c.func})}}return a};ISQ.Profiler.prototype.emptyEvents=function(){var c=this.mPointerArray["ISQ.Event"];var a=0;for(var b=0;b<c.length;++b){if(c[b].count()===0){++a}}return a};ISQ.Profiler.prototype.emptyEventsContainers=function(){var c=new Array();var f;for(var a in this.mPointerArray){if(a==="ISQ.Handler"||a=="ISQ.Event"){continue}for(var d=0;d<this.mPointerArray[a].length;++d){f=this.mPointerArray[a][d];for(var g in f){try{switch(g){case"dispose":case"mIsDisposed":case"ctor":case"dtor":case"mBase":case"__dispose__":case"polymorphismCtor":case"extend":case"__className__":continue;break}if(typeof(f[g])==="undefined"||f[g]===null){continue}if(typeof(f[g])!=="function"&&typeof(f[g])!=="object"){continue}if(f[g].__className__==="ISQ.Event"){if(f[g].count()===0){if(!c[a]){c[a]=new Array()}if(typeof(c[a][g])==="undefined"){c[a][g]=1}else{++c[a][g]}}}}catch(b){}}}}return c};ISQ.Profiler.prototype.inCleaningProcedure=false;ISQ.Profiler.prototype.allocations=function(){return this.mAllocationArray};ISQ.Profiler.prototype.current=function(){return this.mCurrentArray};ISQ.Profiler.prototype.disposals=function(){return this.mDisposalArray
};ISQ.Profiler.prototype.pointers=function(){return this.mPointerArray};if(typeof(profiler)==="undefined"&&debugLevel>2){profiler=new ISQ.Profiler()};