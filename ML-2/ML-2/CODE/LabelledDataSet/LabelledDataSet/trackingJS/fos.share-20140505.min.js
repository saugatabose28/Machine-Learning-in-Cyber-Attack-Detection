!function(a) {
    function n() {
        var m, b = o(), c = b.split("-"), d = c[0];
        - 1 != a.inArray(b, e) ? m = b : (m = j[d], "undefined" == typeof m && (m = j.fallback)), window.fosshare.facebookTempTitle = h[m];
        var n = m.split("-");
        m = n[0] + "_" + n[1].toUpperCase(), window.fosshare.facebookPath = "https://connect.facebook.net/" + m + "/all.js#xfbml=1", - 1 != a.inArray(d, f) ? (window.fosshare.twitterLanguage = d, window.fosshare.twitterTempTitle = i[d]) : (window.fosshare.twitterLanguage = k, window.fosshare.twitterTempTitle = i.fallback);
        var q;
        if ("es-la" == b)
            q = "es-419";
        else if ( - 1 != a.inArray(b, g) ? q = b : - 1 != a.inArray(d, g) ? q = d : (q = l[d], "undefined" == typeof q && (q = l.fallback)), - 1 != q.indexOf("-")) {
            var r = q.split("-");
            q = r[0] + "-" + r[1].toUpperCase()
        }
        window.___gcfg = {
            lang: q,
            parsetags: "explicit"
        }
    }
    function o() {
        var b;
        return b = a("html").attr("lang"), ("undefined" == typeof b || "" == b) && (b = p("language1")), b.toLowerCase()
    }
    function p(a) {
        var b = document.cookie, c = b.indexOf(" " + a + "=");
        if ( - 1 == c && (c = b.indexOf(a + "=")), - 1 == c)
            b = null;
        else {
            c = b.indexOf("=", c) + 1;
            var d = b.indexOf(";", c);
            - 1 == d && (d = b.length), b = unescape(b.substring(c, d))
        }
        return b
    }
    function q(b, c, d) {
        this.id = d, this.element = b, a.isEmptyObject(c) && (c = this.gatherOptions()), b = a.extend(!0, {}, this.options, c), b.shareUrl = this.getShareUrl(b.shareUrl), c.buttons && (b.buttons = c.buttons), this.options = b = a.extend(!0, b, {
            buttons: {
                google: this.isIE(7)?!1: b.buttons.google
            },
            facebook: {
                shareUrl: b.facebook.shareUrl ? b.facebook.shareUrl: b.shareUrl
            },
            twitter: {
                shareUrl: b.twitter.shareUrl ? b.twitter.shareUrl: b.shareUrl
            },
            google: {
                shareUrl: b.google.shareUrl ? b.google.shareUrl: b.shareUrl
            }
        }), this.baseClass = "fosshare", this.cdn = "undefined" != typeof this.options.imagePath ? this.options.imagePath : this.cdn, this.element.addClass(this.baseClass), this.facebookApi = new this.apis("facebook", this.options.buttons), this.twitterApi = new this.apis("twitter", this.options.buttons), this.googleApi = new this.apis("google", this.options.buttons), this.googleAnalyticsApi = new this.apis("googleAnalytics", {
            googleAnalytics: !0,
            id: this.options.analytics.id
        }), this.builders = new this.builders(this), this.create()
    }
    "undefined" == typeof window.fosshare && (window.fosshare = {});
    var c = 500, d = 1e3, e = ["af-za", "ar-ar", "az-az", "be-by", "bg-bg", "bn-in", "bs-ba", "ca-es", "cs-cz", "cy-gb", "da-dk", "de-de", "el-gr", "en-gb", "en-pi", "en-ud", "en-us", "eo-eo", "es-es", "es-la", "et-ee", "eu-es", "fa-ir", "fb-lt", "fi-fi", "fo-fo", "fr-ca", "fr-fr", "fy-nl", "ga-ie", "gl-es", "he-il", "hi-in", "hr-hr", "hu-hu", "hy-am", "id-id", "is-is", "it-it", "ja-jp", "ka-ge", "km-kh", "ko-kr", "ku-tr", "la-va", "lt-lt", "lv-lv", "mk-mk", "ml-in", "ms-my", "nb-no", "ne-np", "nl-nl", "nn-no", "pa-in", "pl-pl", "ps-af", "pt-br", "pt-pt", "ro-ro", "ru-ru", "sk-sk", "sl-si", "sq-al", "sr-rs", "sv-se", "sw-ke", "ta-in", "te-in", "th-th", "tl-ph", "tr-tr", "uk-ua", "vi-vn", "zh-cn", "zh-hk", "zh-tw"], f = ["pt", "it", "es", "tr", "en", "ko", "fr", "ru", "de", "ja"], g = ["af", "am", "ar", "eu", "bn", "bg", "ca", "zh-hk", "zh-cn", "zh-cn", "hr", "cs", "da", "nl", "en-gb", "en-us", "et", "fil", "fi", "fr", "fr-ca", "gl", "de", "el", "gu", "iw", "hi", "hu", "is", "id", "it", "ja", "kn", "ko", "lv", "lt", "ms", "ml", "mr", "no", "fa", "pa", "pt-BR", "pt-PT", "ro", "ru", "sr", "sk", "sl", "es", "es-la", "sw", "wv", "ta", "te", "th", "tr", "uk", "ur", "vi", "zu"], h = {
        fallback: "Like",
        "af-za": "Hou hiervan",
        "ar-ar": "\u0623\u0639\u062c\u0628\u0646\u064a",
        "az-az": "B\u0259y\u0259n",
        "be-by": "\u041f\u0430\u0434\u0430\u0431\u0430\u0435\u0446\u0446\u0430",
        "bg-bg": "\u0425\u0430\u0440\u0435\u0441\u0432\u0430 \u043c\u0438",
        "bn-in": "\u09aa\u099b\u09a8\u09cd\u09a6 \u0995\u09b0\u09c1\u09a8",
        "bs-ba": "Svi\u0111a mi se",
        "ca-es": "M'agrada",
        "cs-cz": "To se mi l\xedb\xed",
        "cy-gb": "Hoffi",
        "da-dk": "Synes godt om",
        "de-de": "Gef\xe4llt mir",
        "el-gr": "\u039c\u03bf\u03c5 \u03b1\u03c1\u03ad\u03c3\u03b5\u03b9!",
        "en-gb": "Like",
        "en-pi": "Arrr!",
        "en-ud": "\u0259\u029e\u0131l",
        "en-us": "Like",
        "eo-eo": "\u015cati",
        "es-es": "Me gusta",
        "es-la": "Me gusta",
        "et-ee": "Meeldib",
        "eu-es": "Atsegin dut",
        "fa-ir": "\u067e\u0633\u0646\u062f\u064a\u062f\u0645",
        "fb-lt": "<3",
        "fi-fi": "Tykk\xe4\xe4",
        "fo-fo": "D\xe1ma",
        "fr-ca": "J\u2019aime",
        "fr-fr": "J\u2019aime",
        "fy-nl": "Leuk",
        "ga-ie": "Is maith liom \xe9 seo",
        "gl-es": "G\xfastame",
        "he-il": "\u05d0\u05d4\u05d1\u05ea\u05d9",
        "hi-in": "\u092a\u0938\u0902\u0926 \u0915\u0930\u0947\u0902",
        "hr-hr": "Svi\u0111a mi se",
        "hu-hu": "Tetszik",
        "hy-am": "\u0540\u0561\u057e\u0561\u0576\u0565\u056c",
        "id-id": "Suka",
        "is-is": "L\xedkar \xfeetta",
        "it-it": "Mi piace",
        "ja-jp": "\u3044\u3044\u306d\uff01",
        "ka-ge": "\u10db\u10dd\u10db\u10ec\u10dd\u10dc\u10e1",
        "km-kh": "\u1785\u17bc\u179b\u1785\u17b7\u178f\u17d2\u178f",
        "ko-kr": "\uc88b\uc544\uc694",
        "ku-tr": "Biecib\xeene",
        "la-va": "Mihi placet",
        "lt-lt": "Patinka",
        "lv-lv": "Like",
        "mk-mk": "\u041c\u0438 \u0441\u0435 \u0434\u043e\u043f\u0430\u0453\u0430",
        "ml-in": "\u0d32\u0d48\u0d15\u0d4d\u0d15\u0d41\u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15",
        "ms-my": "Suka",
        "nb-no": "Liker",
        "ne-np": "\u092e\u0928\u092a\u0930\u094d\u200d\u092f\u094b",
        "nl-nl": "Vind ik leuk",
        "nn-no": "Lik dette",
        "pa-in": "\u0a2a\u0a38\u0a70\u0a26 \u0a15\u0a30\u0a4b",
        "pl-pl": "Lubi\u0119 to!",
        "ps-af": "\u062e\u0648\u069a\u0648\u0644",
        "pt-br": "Curtir",
        "pt-pt": "Gosto",
        "ro-ro": "\xcemi place",
        "ru-ru": "\u041d\u0440\u0430\u0432\u0438\u0442\u0441\u044f",
        "sk-sk": "P\xe1\u010di sa mi to",
        "sl-si": "V\u0161e\u010d mi je",
        "sq-al": "P\xeblqej",
        "sr-rs": "\u0421\u0432\u0438\u0452\u0430 \u043c\u0438 \u0441\u0435",
        "sv-se": "Gilla",
        "sw-ke": "Imenipendeza",
        "ta-in": "\u0baa\u0bbf\u0b9f\u0bbf\u0ba4\u0bcd\u0ba4\u0bbf\u0bb0\u0bc1\u0b95\u0bcd\u0b95\u0bbf\u0bb1\u0ba4\u0bc1",
        "te-in": "\u0c07\u0c37\u0c4d\u0c1f\u0c02",
        "th-th": "\u0e16\u0e39\u0e01\u0e43\u0e08",
        "tl-ph": "Gustuhin",
        "tr-tr": "Be\u011fen",
        "uk-ua": "\u041f\u043e\u0434\u043e\u0431\u0430\u0454\u0442\u044c\u0441\u044f!",
        "vi-vn": "Th\xedch",
        "zh-cn": "\u8d5e",
        "zh-hk": "\u8b9a\u597d",
        "zh-tw": "\u8b9a"
    }, i = {
        fallback: "Tweet",
        en: "Tweet",
        es: "Twittear",
        fr: "Tweeter",
        de: "Twittern",
        it: "Tweet",
        ko: "\ud2b8\uc717",
        ja: "\u30c4\u30a4\u30fc\u30c8",
        pt: "Tweetar",
        tr: "Tweetle",
        ru: "\u0422\u0432\u0438\u0442\u043d\u0443\u0442\u044c"
    };
    if ("undefined" == typeof window.fosshare.facebookLocaleDefaults)
        var j = {
            fallback: "en-us",
            en: "en-us",
            es: "es-la"
        };
    else 
        var j = window.fosshare.facebookLocaleDefaults;
    if ("undefined" == typeof window.fosshare.twitterLanguageDefault)
        var k = "en";
    else 
        var k = window.fosshare.twitterLanguageDefault;
    if ("undefined" == typeof window.fosshare.twitterLanguageDefault)
        var l = {
            fallback: "en-us",
            en: "en-us",
            es: "es-419",
            zh: "zh-cn",
            pt: "pt-br"
        };
    else 
        var l = window.fosshare.googleLocaleDefaults;
    var m = {
        facebook: {
            button: {
                html: '<div class="share-temp"></div>',
                css: {
                    color: "#fff",
                    height: "20px",
                    paddingLeft: "20px",
                    marginRight: "2px",
                    position: "relative"
                }
            },
            title: {
                html: '<span class="share-title"></span>',
                css: {
                    "font-family": "'Helvetica Neue', Helvetica, Arial, 'lucida grande',tahoma,verdana,arial,sans-serif",
                    fontSize: "11px",
                    fontWeight: "bold",
                    lineHeight: "20px",
                    textShadow: "0 -1px 0 #354c8c",
                    "-webkit-font-smoothing": "antialiased",
                    verticalAlign: "middle",
                    paddingRight: "3px",
                    position: "relative"
                }
            },
            end: {
                html: '<div class="share-end"></div>',
                css: {
                    width: "2px",
                    height: "20px",
                    position: "absolute",
                    right: "-2px"
                }
            }
        },
        twitter: {
            button: {
                html: '<div class="share-temp"></div>',
                css: {
                    color: "#333",
                    height: "20px",
                    paddingLeft: "20px",
                    marginRight: "2px",
                    position: "relative"
                }
            },
            title: {
                html: '<span class="share-title"></span>',
                css: {
                    font: "normal normal normal 11px 'Helvetica Neue',Arial,sans-serif",
                    fontWeight: "bold",
                    lineHeight: "20px",
                    textShadow: "text-shadow: 0 1px 0 rgba(255,255,255,.5);",
                    "-webkit-font-smoothing": "antialiased",
                    verticalAlign: "middle",
                    paddingRight: "3px",
                    position: "relative"
                }
            },
            end: {
                html: '<div class="share-end"></div>',
                css: {
                    width: "2px",
                    height: "20px",
                    position: "absolute",
                    right: "-2px"
                }
            }
        }
    }, r = q.prototype;
    r.options = {
        shareUrl: null,
        imagePath: void 0,
        containerFloat: "left",
        buttons: {
            facebook: !0,
            google: !0,
            twitter: !0
        }, facebook : {
            shareUrl: null, hideCommentFlyout : !0
        }, twitter: {
            shareUrl: null, defaultText : "Check out this site!"
        }, google: {
            shareUrl: null
        }, height: 20, analytics : {
            enable: !0, id : "UA-13155896-2"
        }
    }, r.gatherOptions = function() {
        var b = {}, c = this.element;
        if (c.attr("data-shareurl") && (b.shareUrl = c.attr("data-shareurl")), c.attr("data-float") && (b.containerFloat = c.attr("data-float")), c.attr("data-height") && (b.height = c.attr("data-height")), c.attr("data-buttons")) {
            b.buttons = {};
            for (var d = c.attr("data-buttons").split(","), e = 0; e < d.length; e++)
                b.buttons[a.trim(d[e])]=!0
        }
        return b.facebok || (b.facebook = {}), c.attr("data-fbshareurl") && (b.facebook.shareUrl = c.attr("data-fbshareurl")), c.attr("data-fbhideflyout") && (b.facebook.hideCommentFlyout = "true" === c.attr("data-fbhideflyout")), b.twitter || (b.twitter = {}), c.attr("data-twshareurl") && (b.twitter.shareUrl = c.attr("data-twshareurl")), c.attr("data-twtext") && (b.twitter.defaultText = c.attr("data-twtext")), c.attr("data-twhash") && (b.twitter.hash = c.attr("data-twhash")), c.attr("data-twreply") && (b.twitter.reply = c.attr("data-twreply")), c.attr("data-twvia") && (b.twitter.via = c.attr("data-twvia")), c.attr("data-twrelated") && (b.twitter.related = c.attr("data-twrelated")), c.attr("data-gpshareurl") && (b.google = {
            shareUrl: c.attr("data-gpshareurl")
        }), b
    }, r.getShareUrl = function(b) {
        if (null === b) {
            var c = function() {
                var b = a('link[rel="canonical"]');
                return 0 == b.length ? "" : b.attr("href")
            }, b = function() {
                var b = a('meta[property="og:url"]');
                return 0 == b.length ? "" : b.attr("content")
            }();
            0 == b.length && (b = c(), 0 == b.length) && (oshareUrl = window.location.href)
        }
        return b
    }, r.cdn = "undefined" == typeof window.fosShareImagePath ? void 0 : window.fosShareImagePath, r.getCDNUrl = function() {
        if ("undefined" == typeof r.cdn) {
            var b = a('script[id="fosShareScript"]').attr("src"), c = b.split("/");
            b = b.replace(c[c.length - 1], ""), r.cdn = b
        }
        return r.cdn
    }, r.isIE = function(b) {
        var c = a.browser.msie;
        return c && b && "number" == typeof b && ((c = parseInt(a.browser.version.substring(0, 1)) <= b) && (c = "number" != typeof document.documentMode || document.documentMode <= b), c && 7 >= b && (c = navigator.userAgent.indexOf("Trident") < 0)), c
    }, r.extractParamFromUri = function(a, b) {
        if (a) {
            var c = RegExp("[\\?&#]" + b + "=([^&#]*)").exec(a);
            if (null != c)
                return unescape(c[1])
        }
    }, r.apis = function(b, c) {
        var d = this;
        return this.loadScript = function(b, c) {
            var e = document, f = d[b].scriptId, g = d[b].path, h = e.getElementsByTagName("script")[0];
            if (!e.getElementById(f)) {
                if (e = e.createElement("script"), e.id = f, e.type = "text/javascript", e.async = c, e.src = g, f = d[b].attributes, a.isPlainObject(f))
                    for (var i in f)
                        f.hasOwnProperty(i) && (e[i] = f[i]);
                h.parentNode.insertBefore(e, h)
            }
        }, this.ready = function(b, e) {
            if (a.isFunction(e) && c[b]) {
                var f = this[b];
                f.triggeredApiLoad ? a("script#" + f.scriptId).length > 0 && f.testLoaded() ? e() : setTimeout(function() {
                    d.ready(b, e)
                }, 100) : d.loadJsApi(b, e)
            }
        }, this.loadJsApi = function(b, e) {
            var f = this[b];
            c[b] && (d.apiIsLoaded(b) || (a.isFunction(f.preload) && f.preload(), d.loadScript(b, !0), a.isFunction(f.postload) && f.postload()), f.triggeredApiLoad=!0, d.ready(b, e))
        }, this.apiIsLoaded = function(b) {
            return b = this[b], a("script#" + b.scriptId).length > 0 && b.testLoaded()
        }, this.facebook = {
            path: window.fosshare.facebookPath,
            scriptId: "facebook-jssdk",
            triggeredApiLoad: !1,
            preload: function() {
                0 == a("#fb-root").length && a("body").append('<div id="fb-root" />')
            },
            testLoaded: function() {
                return "undefined" != typeof window.FB
            }
        }, this.google = {
            path: "//apis.google.com/js/plusone.js",
            scriptId: "google-jssdk",
            attributes: {
                lang: "en-Us",
                parsetags: "explicit"
            },
            triggeredApiLoad: !1,
            testLoaded: function() {
                return "undefined" != typeof gapi
            }
        }, this.twitter = {
            path: "//platform.twitter.com/widgets.js",
            scriptId: "twitter-wjs",
            triggeredApiLoad: !1,
            testLoaded: function() {
                return "undefined" != typeof twttr
            }
        }, this.googleAnalytics = {
            path: ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js",
            scriptId: "googleanalytics-jssdk",
            triggeredApiLoad: !1,
            testLoaded: function() {
                return "undefined" != typeof ga
            },
            postload: function() {
                var a = a || [];
                a.push(["_setAccount", c.id]), a.push(["_trackPageview"])
            }
        }, {
            load: function(a) {
                return d.loadJsApi(b, a)
            },
            ready: function(a) {
                return d.ready(b, a)
            },
            isLoaded: function() {
                return d.apiIsLoaded(b)
            }
        }
    }, r.builders = function(b) {
        return this.facebook = {
            content: function(c) {
                if (b.options.buttons.facebook===!0) {
                    var d = a("<div />").addClass("fosfbbox").attr("id", "fosfbbox-" + b.id).css({
                        overflow: "hidden",
                        height: "20px",
                        display: "inline-block",
                        "float": "left"
                    }).appendTo(c);
                    m.facebook.button.css.background = 'url("' + b.getCDNUrl() + 'images/fos-share-sprite.png") no-repeat 0 0', m.facebook.end.css.background = 'url("' + b.getCDNUrl() + 'images/fos-share-sprite.png") no-repeat -198px 0';
                    var e = a(m.facebook.button.html).css(m.facebook.button.css).appendTo(d);
                    a(m.facebook.end.html).css(m.facebook.end.css).appendTo(e);
                    var g = a(m.facebook.title.html).css(m.facebook.title.css).text(window.fosshare.facebookTempTitle).appendTo(e);
                    if (b.isIE(7)) {
                        var h = {
                            zoom: "1",
                            display: "inline"
                        };
                        d.css(h), g.css(h)
                    }
                }
            },
            configure: function() {
                if (b.options.buttons.facebook) {
                    var e = this, f = a("#fosfbbox-" + b.id);
                    f.animate({
                        opacity: 0
                    }, c, function() {
                        f.find(".share-temp").remove(), f.append(a("<div />").addClass("fb-like").attr("data-layout", "button_count").attr("data-href", b.options.facebook.shareUrl).attr("data-send", "false").attr("data-show-faces", "false").attr("data-colorscheme", "light").attr("data-sfid", b.id)), b.facebookApi.ready(function() {
                            FB.XFBML.parse(r[0], function() {
                                var c = ($(this).find("iframe"), {
                                    width: "auto"
                                });
                                b.isIE(7) && (c.position = "relative"), f.css(c).animate({
                                    opacity: 1
                                }, d)
                            }), e.configureAnalytics()
                        })
                    })
                }
            },
            configureAnalytics: function() {
                b.options.analytics.enable===!0 && (FB.Event.subscribe("edge.create", function() {
                    _gaq.push(["_trackSocial", "facebook", "like", b.options.facebook.shareUrl])
                }), FB.Event.subscribe("edge.remove", function() {
                    _gaq.push(["_trackSocial", "facebook", "unlike", b.options.facebook.shareUrl])
                }), FB.Event.subscribe("message.send", function() {
                    _gaq.push(["_trackSocial", "facebook", "send", b.options.facebook.shareUrl])
                }))
            }
        }, this.twitter = {
            content: function(c) {
                if (b.options.buttons.twitter===!0) {
                    var d = a("<a />").attr("href", "https://twitter.com/share").addClass("twitter-share-button").attr("data-count", "none").attr("data-url", b.options.twitter.shareUrl).attr("data-text", b.options.twitter.defaultText).attr("lang", window.fosshare.twitterLanguage);
                    b.options.twitter.hash && d.attr("data-hashtags", b.options.twitter.hash), b.options.twitter.reply && d.attr("data-in_reply_to", b.options.twitter.reply), b.options.twitter.via && d.attr("data-via", b.options.twitter.via), b.options.twitter.related && d.attr("data-related", b.options.twitter.related), d = a("<div />").addClass("fostwbox").attr("id", "fostwbox-" + b.id).css({
                        overflow: "hidden",
                        height: "20px",
                        display: "inline-block",
                        "float": "left",
                        marginRight: "10px"
                    }).append(d), c.append(d), m.twitter.button.css.background = 'url("' + b.getCDNUrl() + 'images/fos-share-sprite.png") no-repeat 0 -22px', m.twitter.end.css.background = 'url("' + b.getCDNUrl() + 'images/fos-share-sprite.png") no-repeat -198px -22px';
                    var e = a(m.twitter.button.html).css(m.twitter.button.css).appendTo(d);
                    a(m.twitter.end.html).css(m.twitter.end.css).appendTo(e);
                    var g = a(m.twitter.title.html).css(m.twitter.title.css).text(window.fosshare.twitterTempTitle).appendTo(e);
                    if (b.isIE(7)) {
                        var h = {
                            zoom: "1",
                            display: "inline"
                        };
                        d.css(h), g.css(h)
                    }
                }
            },
            configure: function() {
                if (b.options.buttons.twitter) {
                    var e = this, f = "#fostwbox-" + b.id;
                    a(f).css("width", "auto").animate({
                        opacity: 0
                    }, c, function() {
                        a(f).find(".share-temp").remove(), b.twitterApi.ready(function() {
                            !function b() {
                                try {
                                    twttr.widgets.load(), a(f).find("iframe").length <= 0 ? setTimeout(loadit, 1e3) : (a(f).css("background", ""), e.configureAnalytics())
                                } catch (c) {
                                    setTimeout(b, 100)
                                }
                                a(f).animate({
                                    opacity: 1
                                }, d)
                            }()
                        })
                    })
                }
            },
            configureAnalytics: function() {
                if (b.options.analytics.enable===!0) {
                    var a = function(a) {
                        a && (a.target && "IFRAME" == a.target.nodeName && (opt_target = b.extractParamFromUri(a.target.src, "url")), _gaq.push(["_trackSocial", "twitter", "tweet", b.options.twitter.shareUrl]))
                    };
                    twttr.ready(function(b) {
                        b.events.bind("tweet", a)
                    })
                }
            }
        }, this.google = {
            content: function(c) {
                if (b.options.buttons.google===!0) {
                    var d = a("<div />").addClass("fosgpbox").attr("id", "fosgpbox-" + b.id).css({
                        position: "relative",
                        width: "32px",
                        overflow: "hidden",
                        height: "20px",
                        display: "inline-block",
                        marginRight: "10px",
                        "float": "left",
                        background: "transparent url(" + b.getCDNUrl() + "images/fos-share-sprite.png) no-repeat 0 -44px"
                    }), e = document.createElement("g:plusone");
                    e.setAttribute("size", "medium"), e.setAttribute("annotation", "none"), e.setAttribute("width", "33"), e.setAttribute("recommendations", "false"), e.setAttribute("href", b.options.google.shareUrl), d[0].appendChild(e), c.append(d)
                }
            },
            configure: function() {
                if (b.options.buttons.google) {
                    var e = "#fosgpbox-" + b.id;
                    a(e).animate({
                        opacity: 0
                    }, c, function() {
                        b.googleApi.ready(function() {
                            !function b() {
                                try {
                                    window.gapi.plusone.go(), a(e).find("iframe").length <= 0 ? setTimeout(loadit, 500) : a(e).css("background", "")
                                } catch (c) {
                                    setTimeout(b, 100)
                                }
                                a(e).animate({
                                    opacity: 1
                                }, d)
                            }()
                        })
                    })
                }
            }
        }, this
    }, r.configure = function() {
        this.googleAnalyticsApi.load(!1);
        var a = this.builders;
        a.google.configure(this.holder), a.twitter.configure(this.holder), a.facebook.configure(this.holder)
    }, r.content = function() {
        var a = this.builders;
        a.google.content(this.holder), a.twitter.content(this.holder), a.facebook.content(this.holder)
    }, r.create = function() {
        this.element.height(this.options.height), this.holder = a("<div>").css({
            position: "relative",
            "float": this.options.containerFloat,
            height: this.options.height
        }), this.isIE(7) && this.holder.css({
            zoom: "1",
            display: "inline"
        }), this.content(), this.element.append(this.holder).append('<div style="clear:both;"></div>'), this.googleApi.isLoaded() && this.twitterApi.isLoaded() && this.facebookApi.isLoaded() ? this.configure() : this.holder.bind("mouseover", function() {
            var b = a(".fosshare");
            b.unbind("mouseover"), b.each(function() {
                var b = s.instances[a(this).attr("id")];
                b && b.module && b.module.configure()
            })
        }).addClass("fosshare")
    };
    var s = a.fn.fosShare = function(b) {
        return s.instances || (s.instances = {}), this.each(function() {
            var c = a(this).attr("id");
            if (!s.instances[c]) {
                var d = a(this);
                (null == c || 0 == c.length) && (c = "fosshare" + Math.round(65535 * Math.random()), d.attr("id", c)), s.instances[c] = {}, s.instances[c].module = new q(d, b, c)
            }
        }), this
    };
    return a(document).ready(function() {
        n(), a(".fosshare").fosShare({}).css("width", "auto"), a("div.gdhp-share, #socialNetworks").css({
            left: "auto",
            width: "auto",
            right: 0
        })
    }), s
}(jQuery);
